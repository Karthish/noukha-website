{"ast":null,"code":"import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n  constructor(initialTeardown) {\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._teardowns = null;\n  }\n\n  unsubscribe() {\n    let errors;\n\n    if (!this.closed) {\n      this.closed = true;\n      const {\n        _parentage\n      } = this;\n\n      if (_parentage) {\n        this._parentage = null;\n\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const {\n        initialTeardown\n      } = this;\n\n      if (isFunction(initialTeardown)) {\n        try {\n          initialTeardown();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const {\n        _teardowns\n      } = this;\n\n      if (_teardowns) {\n        this._teardowns = null;\n\n        for (const teardown of _teardowns) {\n          try {\n            execTeardown(teardown);\n          } catch (err) {\n            errors = errors !== null && errors !== void 0 ? errors : [];\n\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  add(teardown) {\n    var _a;\n\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        execTeardown(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n\n          teardown._addParent(this);\n        }\n\n        (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n      }\n    }\n  }\n\n  _hasParent(parent) {\n    const {\n      _parentage\n    } = this;\n    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n  }\n\n  _addParent(parent) {\n    const {\n      _parentage\n    } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  _removeParent(parent) {\n    const {\n      _parentage\n    } = this;\n\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  remove(teardown) {\n    const {\n      _teardowns\n    } = this;\n    _teardowns && arrRemove(_teardowns, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n\n}\n\nSubscription.EMPTY = (() => {\n  const empty = new Subscription();\n  empty.closed = true;\n  return empty;\n})();\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\n\nfunction execTeardown(teardown) {\n  if (isFunction(teardown)) {\n    teardown();\n  } else {\n    teardown.unsubscribe();\n  }\n}","map":{"version":3,"sources":["/Users/Noukha/noukha-website/node_modules/rxjs/dist/esm/internal/Subscription.js"],"names":["isFunction","UnsubscriptionError","arrRemove","Subscription","constructor","initialTeardown","closed","_parentage","_teardowns","unsubscribe","errors","Array","isArray","parent","remove","e","teardown","execTeardown","err","push","add","_a","_hasParent","_addParent","includes","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription","value"],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._teardowns = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown } = this;\n            if (isFunction(initialTeardown)) {\n                try {\n                    initialTeardown();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _teardowns } = this;\n            if (_teardowns) {\n                this._teardowns = null;\n                for (const teardown of _teardowns) {\n                    try {\n                        execTeardown(teardown);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execTeardown(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _teardowns } = this;\n        _teardowns && arrRemove(_teardowns, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execTeardown(teardown) {\n    if (isFunction(teardown)) {\n        teardown();\n    }\n    else {\n        teardown.unsubscribe();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}