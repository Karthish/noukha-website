{"ast":null,"code":"import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n  return operate((source, subscriber) => {\n    let innerSubscriber = null;\n    let index = 0;\n    let isComplete = false;\n\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(new OperatorSubscriber(subscriber, value => {\n      innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n      let innerIndex = 0;\n      const outerIndex = index++;\n      innerFrom(project(value, outerIndex)).subscribe(innerSubscriber = new OperatorSubscriber(subscriber, innerValue => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue), () => {\n        innerSubscriber = null;\n        checkComplete();\n      }));\n    }, () => {\n      isComplete = true;\n      checkComplete();\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/Noukha/noukha-website/node_modules/rxjs/dist/esm/internal/operators/switchMap.js"],"names":["innerFrom","operate","OperatorSubscriber","switchMap","project","resultSelector","source","subscriber","innerSubscriber","index","isComplete","checkComplete","complete","subscribe","value","unsubscribe","innerIndex","outerIndex","innerValue","next"],"mappings":"AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,cAA5B,EAA4C;AAC/C,SAAOJ,OAAO,CAAC,CAACK,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,UAAU,GAAG,KAAjB;;AACA,UAAMC,aAAa,GAAG,MAAMD,UAAU,IAAI,CAACF,eAAf,IAAkCD,UAAU,CAACK,QAAX,EAA9D;;AACAN,IAAAA,MAAM,CAACO,SAAP,CAAiB,IAAIX,kBAAJ,CAAuBK,UAAvB,EAAoCO,KAAD,IAAW;AAC3DN,MAAAA,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACO,WAAhB,EAAlE;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,YAAMC,UAAU,GAAGR,KAAK,EAAxB;AACAT,MAAAA,SAAS,CAACI,OAAO,CAACU,KAAD,EAAQG,UAAR,CAAR,CAAT,CAAsCJ,SAAtC,CAAiDL,eAAe,GAAG,IAAIN,kBAAJ,CAAuBK,UAAvB,EAAoCW,UAAD,IAAgBX,UAAU,CAACY,IAAX,CAAgBd,cAAc,GAAGA,cAAc,CAACS,KAAD,EAAQI,UAAR,EAAoBD,UAApB,EAAgCD,UAAU,EAA1C,CAAjB,GAAiEE,UAA/F,CAAnD,EAA+J,MAAM;AACpOV,QAAAA,eAAe,GAAG,IAAlB;AACAG,QAAAA,aAAa;AAChB,OAHkE,CAAnE;AAIH,KARgB,EAQd,MAAM;AACLD,MAAAA,UAAU,GAAG,IAAb;AACAC,MAAAA,aAAa;AAChB,KAXgB,CAAjB;AAYH,GAjBa,CAAd;AAkBH","sourcesContent":["import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate((source, subscriber) => {\n        let innerSubscriber = null;\n        let index = 0;\n        let isComplete = false;\n        const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            let innerIndex = 0;\n            const outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = new OperatorSubscriber(subscriber, (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue), () => {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, () => {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}