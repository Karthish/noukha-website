{"ast":null,"code":"import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function windowCount(windowSize, startWindowEvery = 0) {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n  return operate((source, subscriber) => {\n    let windows = [new Subject()];\n    let starts = [];\n    let count = 0;\n    subscriber.next(windows[0].asObservable());\n    source.subscribe(new OperatorSubscriber(subscriber, value => {\n      for (const window of windows) {\n        window.next(value);\n      }\n\n      const c = count - windowSize + 1;\n\n      if (c >= 0 && c % startEvery === 0) {\n        windows.shift().complete();\n      }\n\n      if (++count % startEvery === 0) {\n        const window = new Subject();\n        windows.push(window);\n        subscriber.next(window.asObservable());\n      }\n    }, () => {\n      while (windows.length > 0) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, err => {\n      while (windows.length > 0) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    }, () => {\n      starts = null;\n      windows = null;\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/Noukha/noukha-website/node_modules/rxjs/dist/esm/internal/operators/windowCount.js"],"names":["Subject","operate","OperatorSubscriber","windowCount","windowSize","startWindowEvery","startEvery","source","subscriber","windows","starts","count","next","asObservable","subscribe","value","window","c","shift","complete","push","length","err","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,gBAAgB,GAAG,CAApD,EAAuD;AAC1D,QAAMC,UAAU,GAAGD,gBAAgB,GAAG,CAAnB,GAAuBA,gBAAvB,GAA0CD,UAA7D;AACA,SAAOH,OAAO,CAAC,CAACM,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,OAAO,GAAG,CAAC,IAAIT,OAAJ,EAAD,CAAd;AACA,QAAIU,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAH,IAAAA,UAAU,CAACI,IAAX,CAAgBH,OAAO,CAAC,CAAD,CAAP,CAAWI,YAAX,EAAhB;AACAN,IAAAA,MAAM,CAACO,SAAP,CAAiB,IAAIZ,kBAAJ,CAAuBM,UAAvB,EAAoCO,KAAD,IAAW;AAC3D,WAAK,MAAMC,MAAX,IAAqBP,OAArB,EAA8B;AAC1BO,QAAAA,MAAM,CAACJ,IAAP,CAAYG,KAAZ;AACH;;AACD,YAAME,CAAC,GAAGN,KAAK,GAAGP,UAAR,GAAqB,CAA/B;;AACA,UAAIa,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAGX,UAAJ,KAAmB,CAAjC,EAAoC;AAChCG,QAAAA,OAAO,CAACS,KAAR,GAAgBC,QAAhB;AACH;;AACD,UAAI,EAAER,KAAF,GAAUL,UAAV,KAAyB,CAA7B,EAAgC;AAC5B,cAAMU,MAAM,GAAG,IAAIhB,OAAJ,EAAf;AACAS,QAAAA,OAAO,CAACW,IAAR,CAAaJ,MAAb;AACAR,QAAAA,UAAU,CAACI,IAAX,CAAgBI,MAAM,CAACH,YAAP,EAAhB;AACH;AACJ,KAbgB,EAad,MAAM;AACL,aAAOJ,OAAO,CAACY,MAAR,GAAiB,CAAxB,EAA2B;AACvBZ,QAAAA,OAAO,CAACS,KAAR,GAAgBC,QAAhB;AACH;;AACDX,MAAAA,UAAU,CAACW,QAAX;AACH,KAlBgB,EAkBbG,GAAD,IAAS;AACR,aAAOb,OAAO,CAACY,MAAR,GAAiB,CAAxB,EAA2B;AACvBZ,QAAAA,OAAO,CAACS,KAAR,GAAgBK,KAAhB,CAAsBD,GAAtB;AACH;;AACDd,MAAAA,UAAU,CAACe,KAAX,CAAiBD,GAAjB;AACH,KAvBgB,EAuBd,MAAM;AACLZ,MAAAA,MAAM,GAAG,IAAT;AACAD,MAAAA,OAAO,GAAG,IAAV;AACH,KA1BgB,CAAjB;AA2BH,GAhCa,CAAd;AAiCH","sourcesContent":["import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function windowCount(windowSize, startWindowEvery = 0) {\n    const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n    return operate((source, subscriber) => {\n        let windows = [new Subject()];\n        let starts = [];\n        let count = 0;\n        subscriber.next(windows[0].asObservable());\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            for (const window of windows) {\n                window.next(value);\n            }\n            const c = count - windowSize + 1;\n            if (c >= 0 && c % startEvery === 0) {\n                windows.shift().complete();\n            }\n            if (++count % startEvery === 0) {\n                const window = new Subject();\n                windows.push(window);\n                subscriber.next(window.asObservable());\n            }\n        }, () => {\n            while (windows.length > 0) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, (err) => {\n            while (windows.length > 0) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        }, () => {\n            starts = null;\n            windows = null;\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}