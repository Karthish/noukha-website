{"ast":null,"code":"import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n  return operate((source, subscriber) => {\n    let buffers = [];\n    let count = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, value => {\n      let toEmit = null;\n\n      if (count++ % startBufferEvery === 0) {\n        buffers.push([]);\n      }\n\n      for (const buffer of buffers) {\n        buffer.push(value);\n\n        if (bufferSize <= buffer.length) {\n          toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n          toEmit.push(buffer);\n        }\n      }\n\n      if (toEmit) {\n        for (const buffer of toEmit) {\n          arrRemove(buffers, buffer);\n          subscriber.next(buffer);\n        }\n      }\n    }, () => {\n      for (const buffer of buffers) {\n        subscriber.next(buffer);\n      }\n\n      subscriber.complete();\n    }, undefined, () => {\n      buffers = null;\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/Noukha/noukha-website/node_modules/rxjs/dist/esm/internal/operators/bufferCount.js"],"names":["operate","OperatorSubscriber","arrRemove","bufferCount","bufferSize","startBufferEvery","source","subscriber","buffers","count","subscribe","value","toEmit","push","buffer","length","next","complete","undefined"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,gBAAgB,GAAG,IAApD,EAA0D;AAC7DA,EAAAA,gBAAgB,GAAGA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA8ED,UAAjG;AACA,SAAOJ,OAAO,CAAC,CAACM,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiB,IAAIT,kBAAJ,CAAuBM,UAAvB,EAAoCI,KAAD,IAAW;AAC3D,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAIH,KAAK,KAAKJ,gBAAV,KAA+B,CAAnC,EAAsC;AAClCG,QAAAA,OAAO,CAACK,IAAR,CAAa,EAAb;AACH;;AACD,WAAK,MAAMC,MAAX,IAAqBN,OAArB,EAA8B;AAC1BM,QAAAA,MAAM,CAACD,IAAP,CAAYF,KAAZ;;AACA,YAAIP,UAAU,IAAIU,MAAM,CAACC,MAAzB,EAAiC;AAC7BH,UAAAA,MAAM,GAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,EAAzD;AACAA,UAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ;AACH;AACJ;;AACD,UAAIF,MAAJ,EAAY;AACR,aAAK,MAAME,MAAX,IAAqBF,MAArB,EAA6B;AACzBV,UAAAA,SAAS,CAACM,OAAD,EAAUM,MAAV,CAAT;AACAP,UAAAA,UAAU,CAACS,IAAX,CAAgBF,MAAhB;AACH;AACJ;AACJ,KAlBgB,EAkBd,MAAM;AACL,WAAK,MAAMA,MAAX,IAAqBN,OAArB,EAA8B;AAC1BD,QAAAA,UAAU,CAACS,IAAX,CAAgBF,MAAhB;AACH;;AACDP,MAAAA,UAAU,CAACU,QAAX;AACH,KAvBgB,EAuBdC,SAvBc,EAuBH,MAAM;AAChBV,MAAAA,OAAO,GAAG,IAAV;AACH,KAzBgB,CAAjB;AA0BH,GA7Ba,CAAd;AA8BH","sourcesContent":["import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n    return operate((source, subscriber) => {\n        let buffers = [];\n        let count = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            let toEmit = null;\n            if (count++ % startBufferEvery === 0) {\n                buffers.push([]);\n            }\n            for (const buffer of buffers) {\n                buffer.push(value);\n                if (bufferSize <= buffer.length) {\n                    toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n                    toEmit.push(buffer);\n                }\n            }\n            if (toEmit) {\n                for (const buffer of toEmit) {\n                    arrRemove(buffers, buffer);\n                    subscriber.next(buffer);\n                }\n            }\n        }, () => {\n            for (const buffer of buffers) {\n                subscriber.next(buffer);\n            }\n            subscriber.complete();\n        }, undefined, () => {\n            buffers = null;\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}